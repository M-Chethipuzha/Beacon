version: "3.8"

services:
  beacon-edge-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: beacon-edge-gateway
    hostname: beacon-gateway
    restart: unless-stopped

    ports:
      - "8081:8081" # API server
      - "5683:5683/udp" # CoAP server
      - "9090:9090" # Prometheus metrics

    volumes:
      - ./config:/app/config:ro
      - ./data:/app/data
      - ./logs:/app/logs
      - ./certs:/app/certs:ro

    environment:
      - BEACON_CONFIG_FILE=/app/config/gateway.toml
      - BEACON_LOG_LEVEL=INFO
      - BEACON_GATEWAY_ID=gateway-edge-001

    networks:
      - beacon-network

    depends_on:
      - mosquitto

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: beacon-mosquitto
    hostname: mosquitto
    restart: unless-stopped

    ports:
      - "1883:1883" # MQTT
      - "8883:8883" # MQTT over TLS
      - "9001:9001" # WebSocket

    volumes:
      - ./docker/mosquitto/config:/mosquitto/config:ro
      - ./docker/mosquitto/data:/mosquitto/data
      - ./docker/mosquitto/log:/mosquitto/log

    networks:
      - beacon-network

  prometheus:
    image: prom/prometheus:latest
    container_name: beacon-prometheus
    hostname: prometheus
    restart: unless-stopped

    ports:
      - "9091:9090" # Prometheus web UI

    volumes:
      - ./docker/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus

    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"

    networks:
      - beacon-network

  grafana:
    image: grafana/grafana:latest
    container_name: beacon-grafana
    hostname: grafana
    restart: unless-stopped

    ports:
      - "3000:3000" # Grafana web UI

    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./docker/monitoring/grafana/provisioning:/etc/grafana/provisioning:ro

    environment:
      - GF_SECURITY_ADMIN_PASSWORD=beacon_admin
      - GF_USERS_ALLOW_SIGN_UP=false

    networks:
      - beacon-network

    depends_on:
      - prometheus

networks:
  beacon-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus-data:
  grafana-data:
