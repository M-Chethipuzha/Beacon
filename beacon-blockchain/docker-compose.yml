# BEACON Blockchain Docker Compose Configuration
# Production-ready multi-node BEACON network deployment

version: "3.8"

services:
  # BEACON Node 1 (Primary)
  beacon-node-1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: beacon-node-1
    hostname: beacon-node-1
    user: "1000:1000"
    environment:
      - BEACON_NODE_ID=beacon-node-1
      - BEACON_API_PORT=3000
      - BEACON_P2P_PORT=8080
      - BEACON_GRPC_PORT=9000
      - BEACON_DISCOVERY_PORT=8081
      - BEACON_DATA_DIR=/data/beacon/storage
      - BEACON_LOG_LEVEL=info
      - BEACON_NETWORK_MODE=production
      - BEACON_BOOTSTRAP_PEERS=beacon-node-2:8080,beacon-node-3:8080
    ports:
      - "3001:3000" # REST API
      - "8081:8080" # P2P Network
      - "8091:8081" # Discovery
      - "9001:9000" # gRPC
    volumes:
      - beacon-node-1-data:/data/beacon/storage
      - beacon-node-1-logs:/data/beacon/logs
      - ./docker/config:/etc/beacon:ro
    networks:
      - beacon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # BEACON Node 2 (Secondary)
  beacon-node-2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: beacon-node-2
    hostname: beacon-node-2
    environment:
      - BEACON_NODE_ID=beacon-node-2
      - BEACON_API_PORT=3000
      - BEACON_P2P_PORT=8080
      - BEACON_GRPC_PORT=9000
      - BEACON_DISCOVERY_PORT=8081
      - BEACON_DATA_DIR=/data/beacon/storage
      - BEACON_LOG_LEVEL=info
      - BEACON_NETWORK_MODE=production
      - BEACON_BOOTSTRAP_PEERS=beacon-node-1:8080,beacon-node-3:8080
    ports:
      - "3002:3000" # REST API
      - "8082:8080" # P2P Network
      - "8092:8081" # Discovery
      - "9002:9000" # gRPC
    volumes:
      - beacon-node-2-data:/data/beacon/storage
      - beacon-node-2-logs:/data/beacon/logs
      - ./docker/config:/etc/beacon:ro
    networks:
      - beacon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - beacon-node-1

  # BEACON Node 3 (Tertiary)
  beacon-node-3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: beacon-node-3
    hostname: beacon-node-3
    environment:
      - BEACON_NODE_ID=beacon-node-3
      - BEACON_API_PORT=3000
      - BEACON_P2P_PORT=8080
      - BEACON_GRPC_PORT=9000
      - BEACON_DISCOVERY_PORT=8081
      - BEACON_DATA_DIR=/data/beacon/storage
      - BEACON_LOG_LEVEL=info
      - BEACON_NETWORK_MODE=production
      - BEACON_BOOTSTRAP_PEERS=beacon-node-1:8080,beacon-node-2:8080
    ports:
      - "3003:3000" # REST API
      - "8083:8080" # P2P Network
      - "8093:8081" # Discovery
      - "9003:9000" # gRPC
    volumes:
      - beacon-node-3-data:/data/beacon/storage
      - beacon-node-3-logs:/data/beacon/logs
      - ./docker/config:/etc/beacon:ro
    networks:
      - beacon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - beacon-node-1
      - beacon-node-2

  # Load Balancer (nginx)
  beacon-lb:
    image: nginx:alpine
    container_name: beacon-lb
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - beacon-network
    restart: unless-stopped
    depends_on:
      - beacon-node-1
      - beacon-node-2
      - beacon-node-3

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: beacon-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - beacon-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: beacon-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/monitoring/grafana:/etc/grafana/provisioning:ro
    networks:
      - beacon-network
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  beacon-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  beacon-node-1-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/node-1
  beacon-node-1-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/node-1
  beacon-node-2-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/node-2
  beacon-node-2-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/node-2
  beacon-node-3-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/node-3
  beacon-node-3-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/node-3
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
