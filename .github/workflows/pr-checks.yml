name: PR Quality Gates

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check code formatting
        run: |
          cd beacon-blockchain
          cargo fmt --all -- --check

      - name: Run Clippy linting
        run: |
          cd beacon-blockchain
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Check for common security issues
        run: |
          cd beacon-blockchain
          cargo install cargo-audit
          cargo audit

      - name: Validate Cargo.toml
        run: |
          cd beacon-blockchain
          cargo check --all

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust: [stable, beta]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run unit tests
        run: |
          cd beacon-blockchain
          cargo test --all --verbose

      - name: Run documentation tests
        run: |
          cd beacon-blockchain
          cargo test --doc

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: beacon_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-integration-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Start blockchain node
        run: |
          cd beacon-blockchain
          cargo build --release --bin beacon-node
          ./target/release/beacon-node --config tests/test-config.toml &
          sleep 10

      - name: Run integration tests
        run: |
          cd beacon-blockchain
          cargo test --test integration --verbose

      - name: Test API endpoints
        run: |
          cd beacon-blockchain
          cargo test --test api_tests --verbose

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build production Docker image
        run: |
          cd beacon-blockchain
          docker build -t beacon-node:test .

      - name: Build development Docker image
        run: |
          cd beacon-blockchain
          docker build -f Dockerfile.dev -t beacon-node:dev-test .

      - name: Test Docker container startup
        run: |
          docker run --rm -d --name beacon-test beacon-node:test
          sleep 5
          docker logs beacon-test
          docker stop beacon-test

      - name: Container security scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "beacon-node:test"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  performance-benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-bench-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run performance benchmarks
        run: |
          cd beacon-blockchain
          cargo bench --all

      - name: Check performance regression
        run: |
          cd beacon-blockchain
          # Compare with baseline performance metrics
          ./scripts/check-performance-regression.sh

  edge-gateway-tests:
    name: Edge Gateway SCS Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: |
          cd edge-gateway-scs/gateway-app
          pip install -r requirements.txt

      - name: Run Python tests
        run: |
          cd edge-gateway-scs/gateway-app
          python -m pytest tests/ -v

      - name: Test gateway-blockchain integration
        run: |
          # Start blockchain node
          cd beacon-blockchain
          cargo run --bin beacon-node &
          sleep 10

          # Test gateway connection
          cd edge-gateway-scs
          python test_integration.py

  documentation:
    name: Documentation Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Generate Rust documentation
        run: |
          cd beacon-blockchain
          cargo doc --no-deps --document-private-items --all-features

      - name: Check documentation links
        run: |
          cd beacon-blockchain
          cargo test --doc

      - name: Validate markdown files
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: "yes"
          config-file: ".github/markdown-link-check-config.json"

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Cargo audit
        run: |
          cd beacon-blockchain
          cargo install cargo-audit
          cargo audit --deny warnings

      - name: Dependency vulnerability scan
        uses: actions/dependency-review-action@v3

      - name: SAST with CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: rust

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  privacy-compliance:
    name: Privacy Compliance Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for sensitive data exposure
        run: |
          # Search for patterns that might expose sensitive data
          ./scripts/privacy-compliance-check.sh

      - name: Validate device ID hashing
        run: |
          cd beacon-blockchain
          cargo test privacy_tests --verbose

      - name: Check audit logging compliance
        run: |
          cd beacon-blockchain
          cargo test audit_compliance --verbose

  deployment-validation:
    name: Deployment Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Docker Compose files
        run: |
          docker-compose -f beacon-blockchain/docker-compose.yml config
          docker-compose -f edge-gateway-scs/docker-compose.yml config

      - name: Check Kubernetes manifests
        run: |
          # Install kubeval
          wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar xf kubeval-linux-amd64.tar.gz
          sudo mv kubeval /usr/local/bin

          # Validate manifests
          find deployment/kubernetes -name "*.yaml" -exec kubeval {} \;

      - name: Terraform validation
        run: |
          cd deployment/terraform
          terraform init -backend=false
          terraform validate
